-------------------git的功能介紹-----------------------
1.Repository : 儲藏庫(與Qsync資料夾相似)
2.Commit     : 每一次變動的確認
3.Clone      : 複製資料到自己電腦
4.Branch     : 產生另外一條支線
5.Fork       : 拿別人的儲藏庫回來


-------------------Qsync的缺點-----------------------
A.Qsync編輯檔案的人，編輯的次數和內容無法得知
B.Qsync如果沒有手動保存，就沒辦法再回朔到某一個狀態的資訊(回到2018/5/14的資料夾長什麼樣子)
C.Qsync刪掉檔案的話就消失了


-------------------新增_commit---------------------
檔案命名:   不知道作者以及建立時間的檔案.txt
檔案內容:   說明 : Qsync如果沒有看到螢幕跳出來的更新的話，很難知道是誰建立這個檔案的，但是Git可以透過commit掌握這些資訊
Commit內容: 第二個版本建立



-------------------修改_commit---------------------
檔案內容:   git也知道你在哪一個版本加了哪些內容
Commit內容: 第三個版本建立



-------------------刪除_commit---------------------
檔案命名:   刪掉就消失的檔案.txt
檔案內容:   說明 : Qsync如果沒有備份，刪掉就再也找不回來了，但是Git可以透過版本回溯的功能找回檔案
Commit內容: 第四個版本建立

刪除時的Commit內容: 第五個版本建立 (小Allen刪的)


---------------------Branch------------------------
檔案命名:   投影片_基礎架構.txt
檔案內容:   Division Training要做報告，所以4/1先建一個包含大綱部分的投影片做為主要的投影片 
            Kim、Miyai和小Allen分別以此作為基礎去製作自己負責部分的投影片內容，最後在一起合成同一份
Commit內容: Division Training要到了，所以我們做了一份基礎的報告，需要變更Qsync資料夾的所有資訊


Branch命名:   allen_branch
檔案內容:     小Allen加入了他負責的部份的投影片內容
Branch命名:   king_branch
檔案內容:     Kim加入了他負責的部份的投影片內容
---------------------------------------------------
